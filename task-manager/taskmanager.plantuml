@startuml
title TaskMaster — Entities only (Model, TaskMaster, Engineer, Task)
skinparam classAttributeIconSize 0
top to bottom direction

class TaskMaster <<entity>> {
  ~appName : String = "TaskMaster"
  ~version : String
  ~model   : Model
  + TaskMaster(model: Model)
}

class Model <<entity>> {
  ~engineers : List<Engineer>
  ~unassignedTasks : List<Task>
  ~completedTasks  : List<Task>

  + addEngineer(name:String) : Engineer
  + removeEngineer(id:String) : boolean
  + addTask(title:String, estMin:int, desc:String="") : Task
  + removeTask(id:String) : boolean
  + assignTask(taskId:String, engineerId:String) : boolean
  + completeTask(taskId:String, actualMin:int) : boolean

  + engineersList() : List<Engineer>
  + unassignedTasksList() : List<Task>
  + completedTasksList() : List<Task>
  + tasksByEngineer(engineerId:String) : List<Task>

  + totalUnassignedMinutes() : int
  + totalAssignedMinutesByEngineer(engineerId:String) : int
  + totalCompletedMinutes() : int

  + totalAssignedMinutesByEngineer() : Map<Engineer,int>
  + Model()
}

class Engineer <<entity>> {
  ~id   : String
  ~name : String
  - assignedTasks : List<Task>
  + Engineer(id:String, name:String)
  + assignedTasksList() : List<Task>
  + totalEstimatedAssignedMinutes() : int
}

class Task <<entity>> {
  ~id               : String
  ~title            : String
  ~description      : String
  ~estimatedMinutes : int
  ~actualMinutes    : Integer
  ~isCompleted      : boolean
  + Task(id:String, title:String, estimatedMinutes:int, description:String="")
}

TaskMaster "1" *-- "1" Model : owns
Model "1" *-- "0..*" Engineer : owns
Model "1" *-- "0..*" Task     : owns
Engineer "1" o-- "0..*" Task  : assignedTasks
Task "0..1" --> "1" Engineer  : assignedTo

note top of Model
  Identity
  • Engineer.id and Task.id are unique within Model.
  Invariants
  • Once assigned, a task cannot be unassigned or reassigned.
  • removeEngineer(id): only if that engineer has 0 assigned tasks.
  • removeTask(id): only if UNASSIGNED and not completed.
end note

note right of Task
  Minutes & completion
  • estimatedMinutes > 0
  • actualMinutes is null or ≥ 0
  • Completing a task sets actualMinutes and moves it to completedTasks.
  • Pre (completeTask): task is ASSIGNED and not completed.
  • Post: removed from Engineer.assignedTasks and added to completedTasks.
end note

note right of Engineer
  Aggregation
  • assignedTasks explicit (0..*).
  • totalEstimatedAssignedMinutes() sums estimatedMinutes over assignedTasks.
end note
@enduml